{"version":3,"file":"static/js/97.9a77995a.chunk.js","mappings":"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","sources":["ui-component/language/languageSelect.js","views/pages/login/RestLogin.js","hooks/useLogin.js","ui-component/cards/AuthFooter.js","themes/AuthWrapper1.js","views/pages/login/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18next from 'i18next';\r\n\r\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown';\r\nimport Button from '@mui/material/Button';\r\nimport Popover from '@mui/material/Popover';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport { useEffect } from 'react';\r\n\r\nconst languageMap = {\r\n    en: { label: 'English', dir: 'ltr', active: false },\r\n    fr: { label: 'FranÃ§ais', dir: 'ltr', active: true },\r\n    ar: { label: 'Arabic', dir: 'ltr', active: false },\r\n    por: { label: 'Portuguese', dir: 'ltr', active: false }\r\n};\r\n\r\n// localStorage.setItem('i18nextLng', languageMap['en']);\r\n\r\nconst LanguageSelect = () => {\r\n    let selected = localStorage.getItem('i18nextLng') === 'en-US' ? 'en' : localStorage.getItem('i18nextLng'); //First time show error\r\n    const { t } = useTranslation();\r\n\r\n    const [menuAnchor, setMenuAnchor] = React.useState(null);\r\n    React.useEffect(() => {\r\n        document.body.dir = languageMap[selected].dir;\r\n    }, [menuAnchor, selected]);\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-end align-items-center language-select-root\">\r\n            <Button onClick={({ currentTarget }) => setMenuAnchor(currentTarget)}>\r\n                {languageMap[selected].label}\r\n                <ArrowDropDown fontSize=\"large\" />\r\n            </Button>\r\n            <Popover\r\n                open={!!menuAnchor}\r\n                anchorEl={menuAnchor}\r\n                onClose={() => setMenuAnchor(null)}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                }}\r\n            >\r\n                <div>\r\n                    <List>\r\n                        <ListSubheader>{t('select_language')}</ListSubheader>\r\n                        {Object.keys(languageMap)?.map((item) => (\r\n                            <ListItem\r\n                                button\r\n                                key={item}\r\n                                onClick={() => {\r\n                                    i18next.changeLanguage(item);\r\n                                    setMenuAnchor(null);\r\n                                }}\r\n                            >\r\n                                {languageMap[item].label}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Popover>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LanguageSelect;\r\n","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { useLogin } from '../../../hooks/useLogin';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@mui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport useScriptRef from '../../../hooks/useScriptRef';\r\nimport AnimateButton from '../../../ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { useEffect } from 'react';\r\nimport SubCard from '../../../ui-component/cards/SubCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n//============================|| API JWT - LOGIN ||============================//\r\n\r\nconst RestLogin = (props, { ...others }) => {\r\n    const { t } = useTranslation();\r\n    const navigate = useNavigate();\r\n    const classes = useStyles();\r\n\r\n    // const scriptedRef = useScriptRef();\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const userReq = <label>{t('username_required')}</label>;\r\n    const passReq = <label>{t('password_required')}</label>;\r\n    const { login, error, isLoading } = useLogin();\r\n    useEffect(() => {\r\n        toast.error(error);\r\n    }, [error]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    username: Yup.string().max(255).required(userReq),\r\n                    password: Yup.string().max(255).required(passReq)\r\n                })}\r\n                onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\n                    if (!values.username) {\r\n                        return toast.error('Username req');\r\n                    } else if (!values.password) {\r\n                        return toast.error('Password req');\r\n                    } else {\r\n                        login(values.username, values.password);\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.username && errors.username)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-username-login\">{t('username')}</InputLabel>\r\n                            <OutlinedInput\r\n                                className={classes.OutlinedInput}\r\n                                id=\"outlined-adornment-username-login\"\r\n                                type=\"username\"\r\n                                value={values.username}\r\n                                name=\"username\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label={t('username')}\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.username && errors.username && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-username-login\">\r\n                                    {' '}\r\n                                    {errors.username}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">{t('password')}</InputLabel>\r\n                            <OutlinedInput\r\n                                className={classes.OutlinedInput}\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label={t('rememeber_me')}\r\n                            />\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={props.login ? '/pages/forgot-password/forgot-password' + props.login : '#'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                <label>{t('forgot_password')}</label>\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isLoading}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    <label>{t('sign_in')}</label>\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RestLogin;\r\n","import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\nimport { Password } from '@mui/icons-material';\r\nimport LoginApi from '../apicalls/LoginApi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const useLogin = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n    const navigate = useNavigate();\r\n\r\n    const login = async (username, password) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        const body = {\r\n            username: username,\r\n            password: password\r\n        };\r\n        LoginApi(body)\r\n            .then((res) => {\r\n                if (res) {\r\n                    const userdata = res.data;\r\n                    localStorage.setItem('user', JSON.stringify(userdata));\r\n                    dispatch({ type: 'LOGIN', payload: userdata });\r\n                    setIsLoading(false);\r\n                    return navigate('/');\r\n                } else {\r\n                    setIsLoading(false);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false);\r\n                setError('Something went wrong , Please check your internet connection.');\r\n            });\r\n    };\r\n    return { login, isLoading, error };\r\n};\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n//-----------------------|| FOOTER - AUTHENTICATION 2 & 3 ||-----------------------//\r\n\r\nconst AuthFooter = () => {\r\n    return (\r\n        <>\r\n            <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                <Typography\r\n                    variant=\"subtitle2\"\r\n                    component={Link}\r\n                    href=\"https://credithive.co.uk\"\r\n                    target=\"_blank\"\r\n                    underline=\"hover\"\r\n                ></Typography>\r\n                <Typography variant=\"subtitle2\" component={Link} href=\"https://credithive.co.uk\" target=\"_blank\" underline=\"hover\">\r\n                    &copy; credithive.co.uk\r\n                </Typography>\r\n            </Stack>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthFooter;\r\n","// material-ui\r\nimport { styled } from '@mui/styles';\r\n\r\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '80vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport LanguageSelect from '../../../ui-component/language/languageSelect';\r\nimport './style.css';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport Logo from './../../../ui-component/Logo';\r\n\r\nimport RestLogin from './RestLogin';\r\nimport AuthFooter from './../../../ui-component/cards/AuthFooter';\r\nimport { useEffect } from 'react';\r\nimport AuthWrapper1 from '../../../themes/AuthWrapper1';\r\n\r\n//================================|| LOGIN MAIN ||================================//\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    useEffect(() => {\r\n        localStorage.setItem('i18nextLng', 'en');\r\n    }, []);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <AuthWrapper1>\r\n                    <Grid container justifyContent=\"right\" color=\"primary\">\r\n                        <LanguageSelect color=\"red\" />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Grid\r\n                            container\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            sx={{ width: { xs: '100%', sm: '35%' }, minHeight: 'calc(100vh - 68px)', mx: 'auto' }}\r\n                        >\r\n                            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <RouterLink to=\"#\">\r\n                                            <Logo />\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        <label>{t('login')}</label>\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        className=\"label\"\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : ''}\r\n                                                    >\r\n                                                        <label>{t('enter_your_credentials_to_continue')}</label>\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <RestLogin />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    {/* <Grid item xs={12}>\r\n                                            <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                                <Typography\r\n                                                    component={RouterLink}\r\n                                                    to=\"/register\"\r\n                                                    variant=\"subtitle1\"\r\n                                                    sx={{ textDecoration: 'none' }}\r\n                                                >\r\n                                                    <label>{t('dont_have_an_account')}</label>\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                        <AuthFooter />\r\n                    </Grid>\r\n                </AuthWrapper1>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["languageMap","en","label","dir","active","fr","ar","por","_Object$keys","selected","localStorage","getItem","t","useTranslation","_React$useState","React","_React$useState2","_slicedToArray","menuAnchor","setMenuAnchor","document","body","_jsxs","className","children","Button","onClick","_ref","currentTarget","_jsx","ArrowDropDown","fontSize","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListSubheader","Object","keys","map","item","ListItem","button","i18next","useStyles","makeStyles","theme","redButton","_defineProperty","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","loginIcon","marginRight","loginInput","_objectSpread","typography","customInput","props","others","assign","_objectDestructuringEmpty","classes","useNavigate","_useState","useState","_useState2","checked","setChecked","_useState3","_useState4","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","userReq","passReq","_useLogin","error","setError","isLoading","setIsLoading","dispatch","useAuthContext","navigate","login","_asyncToGenerator","_regeneratorRuntime","mark","_callee","username","password","wrap","_context","prev","next","LoginApi","then","res","userdata","data","setItem","JSON","stringify","type","payload","catch","stop","_x","_x2","apply","arguments","useLogin","useEffect","toast","Formik","initialValues","submit","validationSchema","Yup","shape","max","required","onSubmit","values","_ref2","setErrors","setStatus","setSubmitting","_ref3","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","noValidate","FormControl","fullWidth","Boolean","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","inputProps","notchedOutline","FormHelperText","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","Stack","direction","alignItems","justifyContent","FormControlLabel","control","Checkbox","target","Typography","variant","component","Link","to","sx","textDecoration","Box","mt","AnimateButton","disableElevation","disabled","size","_Fragment","href","underline","styled","minHeight","useTheme","matchDownSM","useMediaQuery","Grid","container","AuthWrapper1","LanguageSelect","xs","width","sm","mx","m","mb","RouterLink","Logo","secondary","main","gutterBottom","textAlign","RestLogin","Divider","AuthFooter"],"sourceRoot":""}